config:
  name: 商品测试-规范SQL断言示例
  base_url: ${ENV(BASE_URL)}
  tags: [product, sql, standard]

steps:
  # ==================== 测试1：查询商品数据 ====================
  
  - name: 步骤1-查询商品详情（完整SQL断言）
    setup_hooks:
      # ✅ 正确：setup准备数据，不断言
      - ${setup_hook_prepare_product_data(1)}
    variables:
      # 调用SQL hook函数获取数据库中的值
      db_product_name: ${hook_query_product_name(1)}
      db_product_price: ${hook_query_product_price(1)}
      db_product_stock: ${hook_query_product_stock(1)}
    request:
      method: GET
      path: /api/v1/products/1
    validate:
      # ✅ 正确：断言在validate中
      - eq: [status_code, 200]
      
      # SQL断言：验证API返回值与数据库一致
      - eq: [$.data.id, 1]
      - eq: [$.data.name, $db_product_name]
      - eq: [$.data.price, $db_product_price]
      - eq: [$.data.stock, $db_product_stock]
      - ne: [$.data.description, null]
      - ne: [$.data.category, null]
      
      # 数据完整性断言
      - gt: [$.data.stock, 0]
      - gt: [$.data.price, 0]
    teardown_hooks:
      # ✅ 正确：teardown记录统计
      - ${teardown_hook_record_test_stats($response, $session_variables)}

  - name: 步骤2-查询商品列表（完整SQL断言）
    request:
      method: POST
      path: /api/v1/products/search
      headers:
        Content-Type: application/json
      body:
        query: ""  # 空查询返回所有商品
        page: 1
        page_size: 10
    validate:
      # ✅ 正确：断言在validate中
      - eq: [status_code, 200]
      
      # SQL断言：验证列表数据结构
      - gt: [$.data.total, 0]
      - ne: [$.data.items, null]
      
      # 数据完整性断言
      - ne: [$.data, null]
      - gt: [$.data.total, 0]

  - name: 步骤3-按分类查询商品（完整SQL断言）
    request:
      method: POST
      path: /api/v1/products/search
      headers:
        Content-Type: application/json
      body:
        query: ""  # 空查询
        category_id: 1  # 按分类过滤
    validate:
      # ✅ 正确：断言在validate中
      - eq: [status_code, 200]
      
      # SQL断言：验证分类查询结果
      - ge: [$.data.total, 0]
      - ne: [$.data, null]
      
      # 数据完整性断言
      - ge: [$.data.total, 0]

  # ==================== 测试2：商品搜索 ====================
  
  - name: 步骤4-搜索商品（完整SQL断言）
    request:
      method: POST
      path: /api/v1/products/search
      headers:
        Content-Type: application/json
      body:
        query: "iPhone"
    validate:
      # ✅ 正确：断言在validate中
      - eq: [status_code, 200]
      
      # SQL断言：验证搜索结果
      - ge: [$.data.total, 0]
      - ne: [$.data, null]
      
      # 数据完整性断言
      - ge: [$.data.total, 0]

  - name: 步骤5-验证商品数据完整性（完整SQL断言）
    setup_hooks:
      # ✅ 正确：setup准备数据
      - ${setup_hook_prepare_product_data(1)}
    variables:
      # 调用SQL hook函数获取数据库中的值
      db_product_name: ${hook_query_product_name(1)}
      db_product_price: ${hook_query_product_price(1)}
      db_product_stock: ${hook_query_product_stock(1)}
      db_product_desc: ${hook_query_product_description(1)}
    request:
      method: GET
      path: /api/v1/products/1
    validate:
      # ✅ 正确：断言在validate中
      - eq: [status_code, 200]
      
      # SQL断言：验证API返回值与数据库一致
      - eq: [$.data.id, 1]
      - eq: [$.data.name, $db_product_name]
      - eq: [$.data.price, $db_product_price]
      - eq: [$.data.stock, $db_product_stock]
      - eq: [$.data.description, $db_product_desc]
      - ne: [$.data.category, null]
      
      # 数据完整性断言
      - eq: [$.data.is_active, true]
      - ge: [$.data.price, 0]
      - ge: [$.data.stock, 0]
